<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://java.sun.com/xml/ns/javaee"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
    http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" version="2.5">
  <display-name>certificate</display-name>

  <!-- filter中文编码配置（一定要放在最前面，否则不起作用） -->
  <filter>
    <filter-name>characterEncoding</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>characterEncoding</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <!-- 加载spring配置 -->
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  <!-- 默认路径是WEB-INF下的applicationContext.xml，这里可以自定义文件名，如下包括spring与mybatis、redis等整合的配置文件 -->
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>
      classpath:spring-mybatis.xml
<!--      classpath:applicationContext-redis.xml-->
    </param-value>
  </context-param>

  <!-- SpringMVC配置 -->
  <servlet>
    <servlet-name>spring-mvc</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath:spring-mvc.xml</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <!-- 配置不想被SpringMVC拦截的静态资源，也可以在配置文件里使用<mvc:resource />进行配置 -->
<!--  <servlet-mapping>-->
<!--    <servlet-name>default</servlet-name>-->
<!--    <url-pattern>*.js</url-pattern>-->
<!--    <url-pattern>*.css</url-pattern>-->
<!--    <url-pattern>*.jpg</url-pattern>-->
<!--    <url-pattern>*.png</url-pattern>-->
<!--    <url-pattern>*.ico</url-pattern>-->
<!--  </servlet-mapping>-->
  <!-- 表示SpringMVC会拦截所有请求（可以根据需求设置为：*.do等请求url形式） -->
  <servlet-mapping>
    <servlet-name>spring-mvc</servlet-name>
    <url-pattern>/</url-pattern>
  </servlet-mapping>

  <!-- **Spring Security的权限过滤（看自己的项目有没有使用security）-->
<!--  <filter>-->
<!--    <filter-name>springSecurityFilterChain</filter-name>-->
<!--    <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>-->
<!--  </filter>-->
<!--  <filter-mapping>-->
<!--    <filter-name>springSecurityFilterChain</filter-name>-->
<!--    <url-pattern>/*</url-pattern>-->
<!--  </filter-mapping>-->

  <!-- Log4J加载 -->
  <listener>
    <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
  </listener>
  <context-param>
    <param-name>log4jConfigLocation</param-name>
    <param-value>classpath:log4j.properties</param-value>
  </context-param>

  <!-- 欢迎页面 -->
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>index.jsp</welcome-file>
  </welcome-file-list>

  <!-- session会话持续时间15分钟 -->
  <session-config>
    <session-timeout>15</session-timeout>
  </session-config>

</web-app>
